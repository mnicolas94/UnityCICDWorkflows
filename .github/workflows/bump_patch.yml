name: Bump version patch

on:
  workflow_call:
    
jobs:
  bumpPatch:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Bump patch, tag and push
        run: |
          strindex() {
            x="${1%%$2*}"
            [[ "$x" = "$1" ]] && echo -1 || echo "${#x}"
          }
          if [ $(git describe --tags --exact-match HEAD) ]; then
            echo "Current commit already has tag. Can't bump version"
          else
            if [ $(git describe --tags --long --match v[0-9]*) ]; then
              describe=$(git describe --tags --long --match v[0-9]*)
              majorindex=$(strindex $describe .)
              major=${describe:1:majorindex-1}
              minorsub=${describe:majorindex+1}
              minorindex=$(strindex $minorsub .)
              minor=${minorsub:0:minorindex}
              patchsub=${minorsub:minorindex+1}
              patchindex=$(strindex $patchsub -)
              patch=${patchsub:0:patchindex}
              newpatch=$((patch+1))
              oldversion=$major.$minor.$patch
              version=$major.$minor.$newpatch
            else
              oldversion="there was no version before"
              version=0.1.0
            fi
            echo old version: $oldversion
            echo version: $version
            git tag v$version
            git push origin v$version
          fi
      - name: Get variables
        id: variables
        run: |
          tags=$(git describe --tags --abbrev=0 $(git rev-list --tags --max-count=2))
          arr=($tags)
          last=${arr[0]}
          penu=${arr[1]}
          changes=$(git log $penu..$last --pretty=format:"%s")
          changes="${changes//'%'/'%25'}"
          changes="${changes//$'\n'/'%0A'}"
          changes="${changes//$'\r'/'%0D'}"
          chmod +x ./.github/workflows/getname.sh
          projectname=$(./.github/workflows/getname.sh)
          echo "::set-output name=last::$last"
          echo "::set-output name=penu::$penu"
          echo "::set-output name=changes::$changes"
          echo "::set-output name=projectname::$projectname"
      # Changes message
      - uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: '#update #'${{ steps.variables.outputs.projectname}} ${{ steps.variables.outputs.penu }} -> ${{ steps.variables.outputs.last }}
      - uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ steps.variables.outputs.changes }}